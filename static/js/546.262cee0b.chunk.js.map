{"version":3,"file":"static/js/546.262cee0b.chunk.js","mappings":"8OAEaA,EAAWC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oHAQpBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4GAOpBG,EAAeL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iHAQzBK,EAAWP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0B,SCYlC,EA9Ba,SAAHO,GAAqB,IAAfC,EAAOD,EAAPC,QAERC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IAOzB,OALAC,EAAAA,EAAAA,YAAU,WACHN,GACLC,GAASM,EAAAA,EAAAA,IAAeP,GAC1B,GAAG,CAACC,EAAUD,IAGZG,IACEK,EAAAA,EAAAA,KAACnB,EAAQ,CAAAoB,SACNN,EAAKO,MAAM,EAAG,GAAGC,KAAI,SAAAC,GAA4C,IAAzCC,EAAID,EAAJC,KAAMC,EAASF,EAATE,UAAWC,EAAYH,EAAZG,aAAcC,EAAEJ,EAAFI,GACtD,OACEC,EAAAA,EAAAA,MAACxB,EAAQ,CAAAgB,SAAA,EACPD,EAAAA,EAAAA,KAACb,EAAY,CAAAc,UACXD,EAAAA,EAAAA,KAACX,EAAQ,CAACqB,IAhBH,kCAgBuBH,EAAcI,IAAKN,OAEnDL,EAAAA,EAAAA,KAAA,KAAAC,SAAII,KACJL,EAAAA,EAAAA,KAAA,KAAAC,SAAG,wDACHD,EAAAA,EAAAA,KAAA,KAAAC,SAAIK,MANSE,EASnB,KAIR,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: 24px;\n  padding-top: 32px;\n  justify-content: center;\n  margin-bottom: 15px;\n`;\n\nexport const CastItem = styled.li`\n  width: 200px;\n  padding: 8px;\n  border-radius: 8px;\n  background-color: rgba(0, 0, 0, 0.2);\n`;\n\nexport const ActorWrapper = styled.div`\n  width: 120px;\n  overflow: hidden;\n  border-radius: 8px;\n  margin: 0 auto;\n  margin-bottom: 8px;\n`;\n\nexport const ActorImg = styled.img`\n  width: 100%;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilmCast } from '../../redux/films/films.selectors';\nimport { movieCastThunk } from '../../redux/films/filmsOperations';\nimport 'simplebar-react/dist/simplebar.min.css';\nimport { ActorImg, ActorWrapper, CastItem, CastList } from './Cast.styled';\n\nconst Cast = ({ movieId }) => {\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w200';\n  const dispatch = useDispatch();\n  const cast = useSelector(selectFilmCast);\n\n  useEffect(() => {\n    if (!movieId) return;\n    dispatch(movieCastThunk(movieId));\n  }, [dispatch, movieId]);\n\n  return (\n    cast && (\n      <CastList>\n        {cast.slice(0, 7).map(({ name, character, profile_path, id }) => {\n          return (\n            <CastItem key={id}>\n              <ActorWrapper>\n                <ActorImg src={BASE_IMG_URL + profile_path} alt={name} />\n              </ActorWrapper>\n              <p>{name}</p>\n              <p>Персонаж: </p>\n              <p>{character}</p>\n            </CastItem>\n          );\n        })}\n      </CastList>\n    )\n  );\n};\n\nexport default Cast;\n"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","ActorWrapper","_templateObject3","ActorImg","_templateObject4","_ref","movieId","dispatch","useDispatch","cast","useSelector","selectFilmCast","useEffect","movieCastThunk","_jsx","children","slice","map","_ref2","name","character","profile_path","id","_jsxs","src","alt"],"sourceRoot":""}